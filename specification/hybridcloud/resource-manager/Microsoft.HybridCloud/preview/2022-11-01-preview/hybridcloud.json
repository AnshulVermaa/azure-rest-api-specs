{
  "swagger": "2.0",
  "info": {
    "version": "2022-11-01-preview",
    "title": "hybridcloud",
    "description": "Description of the new service",
    "x-ms-code-generation-settings": {
      "name": "hybridcloudClient"
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.HybridCloud/operations": {
      "get": {
        "tags": [
          "Tag1"
        ],
        "operationId": "Operations_List",
        "x-ms-examples": {
          "BatchAccountDelete": {
            "$ref": "./examples/OperationGroupGet.json"
          }
        },
        "description": "This is a sample get operation, please see guidelines in azure-rest-api-specs repository for more info",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Describe the result of a successful operation.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridCloud/cloudConnectors": {
      "get": {
        "tags": [
          "CloudConnectors"
        ],
        "description": "Return list of Cloud Connectors in a subscription",
        "operationId": "CloudConnectorsBySubscription_List",
        "x-ms-examples": {
          "List of Cloud Connectors by Subscription": {
            "$ref": "./examples/CloudConnectorsBySubscriptionList.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of cloud connector resources.",
            "schema": {
              "$ref": "#/definitions/CloudConnectorListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCloud/cloudConnectors": {
      "get": {
        "tags": [
          "CloudConnectors"
        ],
        "description": "Return list of Cloud Connectors in a Resource Group",
        "operationId": "CloudConnectorsByResourceGroup_List",
        "x-ms-examples": {
          "List of Cloud Connectors by ResourceGroup": {
            "$ref": "./examples/CloudConnectorsByResourceGroupList.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of cloud connectors resources.",
            "schema": {
              "$ref": "#/definitions/CloudConnectorListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCloud/cloudConnectors/{cloudConnectorName}": {
      "get": {
        "tags": [
          "CloudConnectors"
        ],
        "operationId": "CloudConnectors_Get",
        "description": "Gets the specified Cloud Connector in a specified resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CloudConnectorNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting Cloud Connector resource.",
            "schema": {
              "$ref": "#/definitions/CloudConnector"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Cloud Connector": {
            "$ref": "./examples/CloudConnectorGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "CloudConnectors"
        ],
        "description": "Creates or updates a Cloud Connector resource",
        "operationId": "CloudConnectors_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CloudConnectorNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/CloudConnector"
            },
            "description": "The parameters to provide for the created Cloud Connector."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting Cloud Connector resource.",
            "schema": {
              "$ref": "#/definitions/CloudConnector"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting Cloud Connector resource.",
            "schema": {
              "$ref": "#/definitions/CloudConnector"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create a Cloud Connector": {
            "$ref": "./examples/CloudConnectorCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "CloudConnectors"
        ],
        "operationId": "CloudConnectors_Delete",
        "description": "Deletes a specified Cloud Connector resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CloudConnectorNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Cloud Connector": {
            "$ref": "./examples/CloudConnectorDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "tags": [
          "CloudConnectors"
        ],
        "operationId": "CloudConnectors_UpdateTags",
        "x-ms-examples": {
          "Update Cloud Connectors tags": {
            "$ref": "./examples/CloudConnectorUpdateTags.json"
          }
        },
        "description": "Updates the specified Cloud Connector tags.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CloudConnectorNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudConnectorTagsObject"
            },
            "description": "Parameters supplied to update Cloud Connector tags."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting Cloud Connector resource.",
            "schema": {
              "$ref": "#/definitions/CloudConnector"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridCloud/cloudConnections": {
      "get": {
        "tags": [
          "CloudConnections"
        ],
        "description": "Return list of Cloud Connections in a subscription",
        "operationId": "CloudConnectionsBySubscription_List",
        "x-ms-examples": {
          "List of Cloud Connections by Subscription": {
            "$ref": "./examples/CloudConnectionsBySubscriptionList.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of cloud connection resources.",
            "schema": {
              "$ref": "#/definitions/CloudConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCloud/cloudConnectors/{cloudConnectorName}/discoverResources": {
      "post": {
        "tags": [
          "CloudConnectors"
        ],
        "operationId": "CloudConnectors_DiscoverResources",
        "x-ms-examples": {
          "Get remote cloud resources by cloud connector name": {
            "$ref": "./examples/CloudConnectorDiscoverResources.json"
          }
        },
        "description": "Given the name of a cloud connector find the return a list of the remote cloud resources that are attached to that name.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CloudConnectorNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get successful. The operation returns the resulting resources connected to the Cloud Connector.",
            "schema": {
              "$ref": "#/definitions/DiscoverResources"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCloud/cloudConnections/{cloudConnectionName}": {
      "get": {
        "tags": [
          "CloudConnections"
        ],
        "operationId": "CloudConnections_Get",
        "description": "Gets the specified Cloud Connection in a specified resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CloudConnectionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns the resulting Cloud Connection resource.",
            "schema": {
              "$ref": "#/definitions/CloudConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get Cloud Connection": {
            "$ref": "./examples/CloudConnectionGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "CloudConnectors"
        ],
        "description": "Creates or updates a Cloud Connector resource",
        "operationId": "CloudConnections_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CloudConnectionNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "x-ms-client-flatten": true,
            "schema": {
              "$ref": "#/definitions/CloudConnection"
            },
            "description": "The parameters to provide for the created Cloud Connection."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting Cloud Connection resource.",
            "schema": {
              "$ref": "#/definitions/CloudConnection"
            }
          },
          "201": {
            "description": "Create successful. The operation returns the resulting Cloud Connection resource.",
            "schema": {
              "$ref": "#/definitions/CloudConnection"
            },
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URI to poll for the operation status",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create a Cloud Connection": {
            "$ref": "./examples/CloudConnectionCreate.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "CloudConnections"
        ],
        "operationId": "CloudConnections_Delete",
        "description": "Deletes a specified Cloud Connection resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CloudConnectionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete successful."
          },
          "202": {
            "description": "Accepted and the operation will complete asynchronously.",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Request successful. Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete Cloud Connection": {
            "$ref": "./examples/CloudConnectionDelete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "patch": {
        "tags": [
          "CloudConnections"
        ],
        "operationId": "CloudConnections_UpdateTags",
        "x-ms-examples": {
          "Update Cloud Connections tags": {
            "$ref": "./examples/CloudConnectionUpdateTags.json"
          }
        },
        "description": "Updates the specified Cloud Connection tags.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CloudConnectionNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudConnectionTagsObject"
            },
            "description": "Parameters supplied to update Cloud Connection tags."
          }
        ],
        "responses": {
          "200": {
            "description": "Update successful. The operation returns the resulting Cloud Connection resource.",
            "schema": {
              "$ref": "#/definitions/CloudConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridCloud/cloudConnections": {
      "get": {
        "tags": [
          "CloudConnections"
        ],
        "description": "Return list of Cloud Connections in a Resource Group",
        "operationId": "CloudConnectionsByResourceGroup_List",
        "x-ms-examples": {
          "List of Cloud Connectors by ResourceGroup": {
            "$ref": "./examples/CloudConnectionsByResourceGroupList.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Request successful. The operation returns a list of cloud connectors resources.",
            "schema": {
              "$ref": "#/definitions/CloudConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed. If the resource group does not exist, 404 (NotFound) will be returned.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "CloudConnectorTagsObject": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        },
        "identity": {
          "allOf": [
            {
              "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity"
            }
          ]
        }
      },
      "description": "Tags object for patch operations."
    },
    "CloudConnectionTagsObject": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "description": "Cloud Connection Tags object for patch operations."
    },
    "CloudConnectorListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudConnector"
          },
          "x-ms-identifiers": [
            "id"
          ],
          "description": "A list of Cloud Connector resources."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to hold the next page of results"
        }
      },
      "description": "Response for the ListCloudConnectors API service call"
    },
    "CloudConnectorPropertiesFormat": {
      "type": "object",
      "properties": {
        "tenantUri": {
          "type": "string",
          "description": "AAD Tenant URI (containing AAD URI and Directory ID). URI is needed for cloud Identification"
        },
        "applicationId": {
          "type": "string",
          "description": "AAD Application ID (aka Client ID). There can be multiple Applications replicated in the same AAD Tenant."
        },
        "clientSecret": {
          "$ref": "#/definitions/ClientSecret",
          "description": "Secret to access the AAD Application ID and Customer KeyVault",
          "x-ms-secret": true
        },
        "cloudConnections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceReference"
          },
          "x-ms-identifiers": [
            "id"
          ],
          "description": "List of authorized Resources which have access to this connector"
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the application rule collection resource."
        }
      },
      "description": "Cloud Connector resource properties."
    },
    "CloudConnector": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CloudConnectorPropertiesFormat",
          "description": "Properties of the Cloud Connector."
        },
        "identity": {
          "allOf": [
            {
              "$ref": "../../../../../common-types/resource-management/v4/managedidentity.json#/definitions/ManagedServiceIdentity"
            }
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "description": "Cloud Connector resource."
    },
    "ClientSecret": {
      "type": "object",
      "description": "Secret to access the AAD Application ID and Customer KeyVault",
      "properties": {
        "key": {
          "type": "string",
          "description": "Secret to access the AAD Application ID"
        },
        "keyVaultId": {
          "type": "string",
          "description": "Resource Ref of the Key vault containing the Client Secret / Certificate"
        }
      }
    },
    "CloudConnectionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudConnection"
          },
          "x-ms-identifiers": [
            "id"
          ],
          "description": "A list of Cloud Connection resources."
        },
        "nextLink": {
          "type": "string",
          "description": "Link to hold the next page of results"
        }
      },
      "description": "Response for the ListCloudConnections API service call"
    },
    "CloudConnectionPropertiesFormat": {
      "type": "object",
      "properties": {
        "cloudConnectorId": {
          "$ref": "#/definitions/ResourceReference",
          "description": "The Cloud Connector to which the Cloud Connection belongs."
        },
        "virtualHub": {
          "$ref": "#/definitions/ResourceReference",
          "description": "The virtualHub to which the Cloud Connection belongs."
        },
        "remoteResourceId": {
          "type": "string",
          "description": "Identifier for the remote resource"
        },
        "sharedKey": {
          "type": "string",
          "description": "Shared Key of the VPN Link Connection"
        },
        "provisioningState": {
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the application rule collection resource."
        }
      },
      "description": "Cloud Connector resource properties."
    },
    "CloudConnection": {
      "type": "object",
      "description": "Resource which represents the managed network connection between Azure Gateways and remote cloud gateways",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CloudConnectionPropertiesFormat",
          "description": "Properties of the Cloud Connection."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DiscoverResources": {
      "type": "object",
      "description": "Resource that represents resources found in remote cloud environments",
      "properties": {
        "resourceFilter": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ResourceFilter",
          "description": "Remote Cloud Resource Type filter"
        },
        "discoveredResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscoveredResource"
          },
          "x-ms-identifiers": [
            "id"
          ],
          "description": "A list of discovered remote cloud resources."
        }
      }
    },
    "ResourceFilter": {
      "type": "object",
      "description": "Remote Cloud Resource Type filter",
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name.",
          "readOnly": true
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type."
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      }
    },
    "DiscoveredResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Remote cloud resource identifier",
          "readOnly": true
        },
        "body": {
          "type": "string",
          "description": "Details / Properties of the remote cloud resource.",
          "readOnly": true
        }
      }
    },
    "ResourceReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource ID."
        }
      },
      "description": "Resource reference properties.",
      "x-ms-azure-resource": true
    },
    "ProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The current provisioning state.",
      "enum": [
        "Succeeded",
        "Canceled",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    }
  },
  "parameters": {
    "CloudConnectorNameParameter": {
      "name": "cloudConnectorName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the cloud connector resource",
      "pattern": "^[a-z][A-Za-z0-9]*$"
    },
    "CloudConnectionNameParameter": {
      "name": "cloudConnectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the cloud connection resource",
      "pattern": "^[a-z][A-Za-z0-9]*$"
    }
  }
}
